<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="DESKTOP-CTNIRRU" failures="0" tests="5" name="Default test" time="11.072" errors="0" timestamp="2025-06-11T21:04:43 IST">
  <testcase classname="testNGBasics.DashBoardTest" name="@BeforeMethod beforeMethod" time="0.005">
    <failure type="java.lang.NullPointerException" message="Cannot invoke &amp;quot;org.openqa.selenium.SearchContext.findElement(org.openqa.selenium.By)&amp;quot; because &amp;quot;this.searchContext&amp;quot; is null">
      <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.SearchContext.findElement(org.openqa.selenium.By)" because "this.searchContext" is null
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy28.isDisplayed(Unknown Source)
at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:304)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:290)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:287)
at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:656)
at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:652)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:203)
at utils.SeleniumHelper.performClick(SeleniumHelper.java:63)
at pageObjects.DashBoardPage.clickDBTab(DashBoardPage.java:24)
at testNGBasics.DashBoardTest.beforeMethod(DashBoardTest.java:27)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:833)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:600)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
    </failure>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="testNGBasics.DashBoardTest" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="testNGBasics.DashBoardTest" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="testNGBasics.DashBoardTest" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="testNGBasics.DashBoardTest" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="testNGBasics.DashBoardTest" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="testNGBasics.DashBoardTest" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="testNGBasics.DashBoardTest" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="testNGBasics.DashBoardTest" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="testNGBasics.DashBoardTest" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="testNGBasics.BaseClass" name="@AfterTest afterTest" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterTest afterTest -->
  <testcase classname="testNGBasics.DashBoardTest" name="assignLeaveButtonTest" time="0.0">
    <skipped/>
  </testcase> <!-- assignLeaveButtonTest -->
  <testcase classname="testNGBasics.DashBoardTest" name="testMethod" time="0.0">
    <skipped/>
  </testcase> <!-- testMethod -->
  <testcase classname="testNGBasics.DashBoardTest" name="testMethod1" time="0.0">
    <skipped/>
  </testcase> <!-- testMethod1 -->
  <testcase classname="testNGBasics.DashBoardTest" name="testMethod2" time="0.0">
    <skipped/>
  </testcase> <!-- testMethod2 -->
  <testcase classname="testNGBasics.DashBoardTest" name="testMethod3" time="0.0">
    <skipped/>
  </testcase> <!-- testMethod3 -->
</testsuite> <!-- Default test -->
